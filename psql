update attributes set editable = "{'access': {'password': {'weight': 20, 'type': 'password', 'description': 'Password for Administrator', 'value': 'test', 'label': 'password'}, 'user': {'weight': 10, 'type': 'text', 'description': 'Username for Administrator', 'value': 'admin', 'label': 'username'}, 'tenant': {'weight': 30, 'type': 'text', 'description': 'Tenant (project) name for Administrator', 'value': 'admin', 'label': 'tenant'}, 'email': {'weight': 40, 'type': 'text', 'description': 'Email address for Administrator', 'value': 'admin@example.org', 'label': 'email'}}, 'syslog': {'syslog_port': {'weight': 20, 'type': 'text', 'description': 'Remote syslog port', 'value': '514', 'label': 'Port'}, 'syslog_transport': {'type': 'radio', 'values': [{'data': 'udp', 'description': '', 'label': 'UDP'}, {'data': 'tcp', 'description': '', 'label': 'TCP'}], 'weight': 30, 'value': 'tcp', 'label': 'Syslog transport protocol'}, 'syslog_server': {'weight': 10, 'type': 'text', 'description': 'Remote syslog hostname', 'value': '', 'label': 'Hostname'}}, 'additional_components': {'murano': {'value': False, 'type': 'checkbox', 'description': 'If selected, Murano component will be installed', 'weight': 20, 'label': 'Install Murano'}, 'ceilometer': {'value': False, 'type': 'checkbox', 'description': 'If selected, Ceilometer component will be installed', 'weight': 40, 'label': 'Install Ceilometer'}, 'heat': {'value': True, 'type': 'hidden', 'description': '', 'weight': 30, 'label': ''}, 'savanna': {'value': True, 'type': 'checkbox', 'description': 'If selected, Savanna component will be installed', 'weight': 10, 'label': 'Install Savanna'}}, 'storage': {'volumes_ceph': {'value': True, 'type': 'checkbox', 'description': 'Configures Cinder to store volumes in Ceph RBD images.', 'weight': 20, 'label': 'Ceph RBD for volumes (Cinder)'}, 'objects_ceph': {'value': True, 'type': 'checkbox', 'description': 'Configures RadosGW front end for Ceph RBD. This exposes S3 and Swift API Interfaces. If enabled, this option will prevent Swift from installing.', 'weight': 40, 'label': 'Ceph RadosGW for objects (Swift API)'}, 'osd_pool_size': {'value': '2', 'type': 'text', 'description': "Configures the default number of object replicas in Ceph. This number must be equal to or lower than the number of deployed 'Storage - Ceph OSD' nodes.", 'weight': 70, 'label': 'Ceph object replication factor'}, 'ephemeral_ceph': {'value': True, 'type': 'checkbox', 'description': 'Configures Nova to store ephemeral volumes in RBD. This works best if Ceph is enabled for volumes and images, too. Enables live migration of all types of Ceph backed VMs (without this option, live migration will only work with VMs launched from Cinder volumes).', 'weight': 35, 'label': 'Ceph RBD for ephemeral volumes (Nova)'}, 'volumes_lvm': {'value': False, 'type': 'checkbox', 'description': 'Requires at least one Storage - Cinder LVM node.', 'weight': 10, 'label': 'Cinder LVM over iSCSI for volumes'}, 'images_ceph': {'value': True, 'type': 'checkbox', 'description': 'Configures Glance to use the Ceph RBD backend to store images. If enabled, this option will prevent Swift from installing.', 'weight': 30, 'label': 'Ceph RBD for images (Glance)'}}, 'common': {'auto_assign_floating_ip': {'weight': 40, 'type': 'checkbox', 'description': 'If selected, OpenStack will automatically assign a floating IP to a new instance', 'value': False, 'label': 'Auto assign floating IP'}, 'use_cow_images': {'weight': 50, 'type': 'checkbox', 'description': "For most cases you will want qcow format. If it's disabled, raw image format will be used to run VMs. OpenStack with raw format currently does not support snapshotting.", 'value': True, 'label': 'Use qcow format for images'}, 'auth_key': {'weight': 70, 'type': 'text', 'description': 'Public key(s) to include in authorized_keys on deployed nodes', 'value': '', 'label': 'Public Key'}, 'compute_scheduler_driver': {'type': 'radio', 'values': [{'data': 'nova.scheduler.filter_scheduler.FilterScheduler', 'description': 'Currently the most advanced OpenStack scheduler. See the OpenStack documentation for details.', 'label': 'Filter scheduler'}, {'data': 'nova.scheduler.simple.SimpleScheduler', 'description': "This is 'naive' scheduler which tries to find the least loaded host", 'label': 'Simple scheduler'}], 'weight': 40, 'value': 'nova.scheduler.filter_scheduler.FilterScheduler', 'label': 'Scheduler driver'}, 'libvirt_type': {'type': 'radio', 'values': [{'data': 'kvm', 'description': 'Choose this type of hypervisor if you run OpenStack on hardware', 'label': 'KVM'}, {'data': 'qemu', 'description': 'Choose this type of hypervisor if you run OpenStack on virtual hosts.', 'label': 'QEMU'}], 'weight': 30, 'value': 'kvm', 'label': 'Hypervisor type'}, 'start_guests_on_host_boot': {'weight': 60, 'type': 'checkbox', 'description': 'Whether to (re-)start guests when the host reboots. If enabled, this option causes guests assigned to the host to be unconditionally restarted when nova-compute starts. If the guest is found to be stopped, it starts. If it is found to be running, it reboots.', 'value': True, 'label': 'Start guests on host boot'}, 'debug': {'weight': 20, 'type': 'checkbox', 'description': 'Debug logging mode provides more information, but requires more disk space.', 'value': False, 'label': 'OpenStack debug logging'}, 'nova_quota': {'weight': 25, 'type': 'checkbox', 'description': 'Quotas are used to limit CPU and memory usage for tenants. Enabling quotas will increase load on the Nova database.', 'value': False, 'label': 'Nova quotas'}}}" where id = 4;
